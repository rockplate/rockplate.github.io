(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{"2KN9":function(e,n,a){(window.__NEXT_P=window.__NEXT_P||[]).push(["/linter",function(){return a("R/qX")}])},FAb2:function(e,n,a){"use strict";a.d(n,"a",(function(){return s}));var t=a("q1tI"),r=a.n(t),l=a("R/WZ"),c=a("hlie"),o=r.a.createElement,i=Object(l.a)((function(e){return{root:{marginTop:"30px",textAlign:"right"}}}));function s(e){var n=i(),a="https://github.com/rockplate/rockplate-docs/edit/master/"+e.path;return o("div",{className:n.root},o(c.a,{href:a,target:"_blank",color:"secondary"},"Edit this page"))}},"R/qX":function(e,n,a){"use strict";a.r(n),a.d(n,"default",(function(){return g}));var t=a("q1tI"),r=a.n(t),l=a("NsgW"),c=a("0FA2"),o=a("FAb2"),i=a("wx14"),s=a("Ff2n"),b=a("7ljp"),p=(r.a.createElement,{}),m="wrapper";function u(e){var n=e.components,a=Object(s.a)(e,["components"]);return Object(b.b)(m,Object(i.a)({},p,a,{components:n,mdxType:"MDXLayout"}),Object(b.b)("h1",{id:"linter"},"Linter"),Object(b.b)("h2",{id:"table-of-contents"},"Table of Contents"),Object(b.b)("ul",null,Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(i.a)({parentName:"li"},{href:"#introduction"}),"Introduction")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(i.a)({parentName:"li"},{href:"#usage"}),"Usage")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(i.a)({parentName:"li"},{href:"#warnings"}),"Warnings")),Object(b.b)("li",{parentName:"ul"},Object(b.b)("a",Object(i.a)({parentName:"li"},{href:"#complete-example"}),"Complete Example"))),Object(b.b)("h2",{id:"introduction"},"Introduction"),Object(b.b)("p",null,"As Rockplate is a templating language, any syntax error you make or any invalid expression or invalid if blocks/repeat blocks are just ignored without throwing any errors."),Object(b.b)("p",null,"As a result, error handling becomes a challenge. Thanks to the built in ",Object(b.b)("strong",{parentName:"p"},"Linter")," that comes as a life saver for this purpose."),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-rockplate:tabs"}),"{}\nI will yell at you [oh no\n")),Object(b.b)("h2",{id:"usage"},"Usage"),Object(b.b)("p",null,"JavaScript/TypeScript"),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-javascript"}),"import { Linter } from 'rockplate';\n// var Linter = window.rockplate.Linter; // when using <script> include\n\nconst template = 'My age is [my age]';\nconst schema = {\n  my: {\n    name: 'My Name',\n    // age is undefined\n  },\n};\nconst linter = new Linter(template, schema);\n// wait for linter.build().then(... when using async schema resolver\nconst result = linter.lint({\n  my: {\n    name: 'John',\n  },\n});\nconsole.log(result.lints.length); // 1\nconsole.log(result.lints[0].message); // Unavailable: Property \"age\" on Object \"my\"\n")),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-rockplate:tabs"}),'{\n    "my": {\n        "name": "My Name"\n    }\n}\nMy age is [my age]\n')),Object(b.b)("h2",{id:"warnings"},"Warnings"),Object(b.b)("p",null,"Warnings occur when you provide any params incompatible to your schema in strict mode."),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"schema")),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "my": {\n    "name": "My Name"\n  }\n}\n')),Object(b.b)("p",null,Object(b.b)("inlineCode",{parentName:"p"},"params")," (note the extra property ",Object(b.b)("inlineCode",{parentName:"p"},"age")," which is not available in the ",Object(b.b)("inlineCode",{parentName:"p"},"schema"),")"),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-json"}),'{\n  "my": {\n    "name": "John",\n    "age": 20\n  }\n}\n')),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-javascript"}),"const linter = new Linter(template, schema);\nconst result = linter.lint(params);\n")),Object(b.b)("p",null,"Try toggling the strict mode switch to on/off (in schema tab) to see the difference in output and lints."),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-rockplate:tabs"}),'{\n  "schema": {\n    "my": {\n      "name": "My Name"\n    }\n  },\n  "params": {\n    "my": {\n      "name": "John",\n      "age": 20\n    }\n  }\n}\nMy name is [my name]\nMy age is [my age]\n')),Object(b.b)("h2",{id:"complete-example"},"Complete Example"),Object(b.b)("pre",null,Object(b.b)("code",Object(i.a)({parentName:"pre"},{className:"language-rockplate:tabs"}),'{\n  "schema": {\n    "my": {\n      "name": "My Name"\n    }\n  },\n  "params": {\n    "my": {\n      "name": "Safraz",\n      "username": "safrazik"\n    }\n  }\n}\nWarning - Illegal Identifier: [my username] (not available in schema, but passed in params)\nProperty Unavailable: [my age]\nIdentifier Unavailable: [your name]\nNot a boolean Property: [if my is name] [end if]\nNot an array [repeat us][end repeat]\nBoolean Unavailable: [if you are ok] [end if]\nInavalid Expression [my name\n')))}u.isMDXComponent=!0;var j=r.a.createElement;function g(){return j(l.a,null,j(u,null),j(o.a,{path:"docs/linter.mdx"}),j(c.a,{step:4,prev:{link:"/syntax",label:"Syntax"},next:{link:"/tools",label:"Tools"}}))}}},[["2KN9",1,2,0,3,4,5]]]);